class AutoComplete extends HTMLElement{constructor(){super(),this.cache={},this.url='',this.param={},this.inputdelay=300,this.querymin=1,this.optionmax=20,this.valid='',this.lastQuery=''}static get observedAttributes(){return['id','api','resultdata','resultname','inputdelay','querymin','optionmax','valid']}attributeChangedCallback(t,i,e){if(i!==e&&(this[t]=e,'api'===t)){this.param={};for(const t of this.api.matchAll(/\$\{(.+?)\}/g)){const i=document.getElementById(t[1].trim());i&&(this.param[t[0]]=i)}}}connectedCallback(){if(this.input=this.firstElementChild,!this.input)return;const t=(this.input.name||this.input.id)+'list',i=document.createElement('datalist');let e;i.id=t,this.datalist=this.insertBefore(i,this.input),this.input.setAttribute('autocomplete','off'),this.input.setAttribute('list',t),this.inputHandler=t=>{clearTimeout(e),e=setTimeout((()=>this.runQuery(t)),this.inputdelay)},this.input.addEventListener('input',this.inputHandler),this.changeHandler=()=>{const t=this.isValid()||this.reset||{};this.input.setCustomValidity(t?'':this.valid),this.input.checkValidity();let i={};for(const e in t)Array.from(this.input.form.querySelectorAll(`[data-autofill="${e}"], [data-autofill="${this.id}.${e}"]`)).forEach((s=>{s.value=t[e]||'',i[e]=''}));this.reset=i},this.input.addEventListener('change',this.changeHandler)}disconnectedCallback(){this.input.removeEventListener('input',this.inputHandler),this.input.removeEventListener('blur',this.changeHandler),this.input.removeAttribute('list'),this.datalist.remove()}runQuery(){const t=this.input.value.trim().toLowerCase(),i=this.isValid(),e=this.lastQuery,s=e&&this.cache[e];let a=this.api||'';for(const t in this.param)a=a.replaceAll(t,(this.param[t].value||'').trim());!this.api||i||t.length<this.querymin||s&&s.complete&&s.url===a&&t.startsWith(e)||(this.cache[t]&&this.cache[t].url===a?this.datalistUpdate(t):(this.cache[t]={},fetch(a).then((t=>t.json())).then((i=>{if(!i)return;i=this.resultdata&&i[this.resultdata]||i,i=Array.isArray(i)?i:[i];const e=document.createDocumentFragment();let s=this.optionmax;for(let a=0;a<i.length&&s>0;a++){const n=this.resultname?i[a][this.resultname]:i[a];if(n&&n.toLowerCase().includes(t)){const t=document.createElement('option');t.value=n,e.appendChild(t),s--}}this.cache[t]={url:a,data:i,frag:e,complete:s>0},this.datalistUpdate(t)}))))}datalistUpdate(t){const i=this.cache[t];i&&i.frag&&(this.lastQuery=t,this.datalist.replaceChildren(i.frag.cloneNode(!0)))}isValid(){const t=this.input.value.trim();if(t&&this.lastQuery)return this.cache[this.lastQuery].data.find((i=>t===i[this.resultname]))}}window.customElements.define('auto-complete',AutoComplete);
